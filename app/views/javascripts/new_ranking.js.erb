var rankings = new Array();

var rank_index = 0;
var title_index = 1;
var year_index = 2;

// create javascript version of @rankings array.
<% @rankings.each do |ranking| %>
  rankings.push(new Array(<%= ranking.rank %>, "<%= escape_javascript(ranking.movie.title) %>", <%= ranking.movie.year || "\"\"" %>));
<% end %>

// mid point between upper and lower limit.
// parseInt rounds down.
function mid_point() {
  return parseInt(rankings.length / 2);
}

var rank_of_movie_being_compared_to;
function compare_next_movie(){
  var ranking = rankings[mid_point()];
  rank_of_movie_being_compared_to = ranking[rank_index];
  var title = ranking[title_index];
  var year = ranking[year_index].toString();
  $("#movie_to_compare > .title").html(title);
  $("#movie_to_compare > .year").html("(" + year + ")");
}

// comparisons.
var better = 1;
var worse = -1;

function add_ajax_to_better_worse_links() {
  // set new limits, and call do_comparison() callback.
  $("#better").click(function(event) {
    do_comparison(better, event);
  });
  $("#worse").click(function(event) {
    do_comparison(worse, event);
  });
}

// callback after better or worse link is clicked.
function do_comparison(comparison, event) {
  event.preventDefault();
  if (rankings.length == 1 || (rankings.length == 2 && comparison == worse)) {
    $("#better").attr("disabled", true);
    $("#worse").attr("disabled", true);
    var position_requested;
    switch(comparison) {
      case better:
        position_requested = rank_of_movie_being_compared_to;
        break;
      case worse:
        position_requested = rank_of_movie_being_compared_to + 1;
        break;
    }
    create_ranking(position_requested);
  }
  else {
    switch(comparison) {
      case better:
        // from end of rankings array, remove every ranking lower than or equal to rank_of_movie_being_compared_to.
        var last_ranking = rankings[rankings.length - 1];
        while(last_ranking[rank_index] >= rank_of_movie_being_compared_to) {
          rankings.pop();
          last_ranking = rankings[rankings.length - 1];
        }
        break;
      case worse:
        // from beginning of rankings array, remove every ranking higher than or equal to rank_of_movie_being_compared_to.
        var first_ranking = rankings[0];
        while(first_ranking[rank_index] <= rank_of_movie_being_compared_to) {
          rankings.shift();
          first_ranking = rankings[0];
        }
        break;
    }
    compare_next_movie();
  }
}

function create_ranking (position_requested) {
  var movie_to_rank = $("#movie_to_rank");
  $.post("/rankings", { ranking: {movie_id: movie_to_rank.attr("movie_id"), tag_id: movie_to_rank.attr("tag_id"), position_requested: position_requested} });
  <% redirect_path = @tag ? user_tag_rankings_path(logged_in_user, @tag) : user_rankings_path(logged_in_user) %>
  window.location.replace("<%= redirect_path %>");
}

$(document).ready(function(){
  compare_next_movie();
  add_ajax_to_better_worse_links();
});
